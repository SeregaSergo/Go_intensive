Exercise 00 - Sleepsort
Check that function sleepSort is present, it accepts an unsorted slice of integers and returns an integer channel
Check that the number of goroutines spawned in this function is equal to the size of an input slice
Check that the every goroutine sleeps for the amount of seconds equal to a given number
Check that the all numbers from an input slice are printed out in a sorted order 


No

Yes
Exercise 01 - Spider-Sense
Check that function crawlWeb is present, it accepts an input channel for URLs and returns an output channel with pointers to strings
Check that the amount of goroutines that are performing requests at a given amount of time is explicitly limited to 8
Check that application can be stopped gracefully by using Ctrl+C
Check that either context.Context for cancellation or done channel is used to perform a graceful shutdown
Check that program stops execution correctly after all URLs are processed


No

Yes
Exercise 02 - Dr. Octopus
Check that function multiplex is present
Check that function multiplex accepts a variable amount of chan interface{} instances as arguments and returns a single chan interface{}
Check manually that all values randomly sent to any input channels are received further on the same output channel
Check that the test is present for the same functionality and it is passed


No

Yes